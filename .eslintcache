[{"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\index.js":"1","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\App.js":"2","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\CLogo.js":"3","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\CBusqueda.js":"4","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\services\\service.js":"5","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\BackConfig.js":"6","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\Routes.js":"7","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\view\\HomeView.js":"8","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\view\\ResultView.js":"9","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\context\\cpeContext.js":"10","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\ProtectedRoute.js":"11"},{"size":267,"mtime":1608779586954,"results":"12","hashOfConfig":"13"},{"size":489,"mtime":1608720230053,"results":"14","hashOfConfig":"13"},{"size":302,"mtime":1608706844612,"results":"15","hashOfConfig":"13"},{"size":14286,"mtime":1608720503884,"results":"16","hashOfConfig":"13"},{"size":886,"mtime":1608718253392,"results":"17","hashOfConfig":"13"},{"size":306,"mtime":1608782415143,"results":"18","hashOfConfig":"13"},{"size":533,"mtime":1608774188304,"results":"19","hashOfConfig":"13"},{"size":197,"mtime":1608719381531,"results":"20","hashOfConfig":"13"},{"size":1878,"mtime":1608775707714,"results":"21","hashOfConfig":"13"},{"size":559,"mtime":1608720262708,"results":"22","hashOfConfig":"13"},{"size":523,"mtime":1608774251036,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1iijz91",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\index.js",[],["48","49"],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\App.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\CLogo.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\CBusqueda.js",["50"],"import React, {useState, useEffect, useContext} from 'react'; \r\nimport { useHistory } from  'react-router-dom';\r\nimport { CpeContext } from '../context/cpeContext';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getCPE, getTipoCPE, getTipoDOC } from '../services/service';\r\nimport Swal from 'sweetalert2';\r\nimport './css/main.css';\r\n\r\nexport const CBusqueda = () => {\r\n    const { setDataCpe } = useContext(CpeContext);\r\n    let { register, handleSubmit, errors} = useForm();\r\n    const history = useHistory();\r\n\r\n    const [tipoCPE, setTipoCPE] = useState([]); \r\n    const [tipoDOC, setTipoDOC] = useState([]); \r\n\r\n    const showTipoCPE = async() => {\r\n        let data = await getTipoCPE(); \r\n        setTipoCPE(data);\r\n    }\r\n\r\n    const showTipoDOC = async() => {\r\n        let data = await getTipoDOC(); \r\n        setTipoDOC(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        showTipoCPE();\r\n        showTipoDOC();\r\n    }, [])\r\n\r\n    let validateSelect = (value) => {\r\n        if(value === \"0\"){\r\n            return false;\r\n        }else{\r\n            return true;\r\n        }\r\n    }\r\n\r\n\r\n    const manejarSubmit = async (data) => {    \r\n \r\n        let datoscpe = await getCPE(data);\r\n\r\n        if (datoscpe.status === false){\r\n            // No Existe el CPE\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: `El comprobante ${data.serieCpe}-${data.numeroCpe} no ha sido informado`,\r\n                showConfirmButton: false,\r\n                timer: 3000\r\n            }) \r\n        }else{\r\n            console.log(datoscpe.content)\r\n            setDataCpe(datoscpe.content)\r\n            // return history.push('/result'); \r\n        }\r\n        //Mostramos el alert\r\n        // Swal.fire({\r\n        //     icon: \"success\",\r\n        //     title: \"Registro correcto\",\r\n        //     showConfirmButton: false,\r\n        //     timer: 1000\r\n        // })\r\n\r\n        // regresamos a la pagina principal\r\n        // return history.push('/category');     \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\"> \r\n            <form onSubmit={handleSubmit(manejarSubmit)}>  \r\n                    <div style={{width: '620px', marginTop: '1rem', marginBottom: '1rem'}}>\r\n                        <div className=\"card mt-3\">\r\n                        <div className=\"card-body\" style={{paddingTop:'10px', paddingBottom: '0px'}}>\r\n                                <h2 className=\"card-title\">\r\n                                    Busqueda de Comprobante Electr√≥nico\r\n                                </h2> \r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"rucEmisor\">RUC del Emisor:</label>\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"rucEmisor\"\r\n                                    name=\"rucEmisor\"\r\n                                    ref={register({required:true, minLength:11, maxLength:11})}\r\n                                    />\r\n                                    {errors.rucEmisor && errors.rucEmisor.type === 'required' && (\r\n                                    <small className=\"text-danger font-weight-bold\">Debe ingresar el Ruc del Emisor</small>\r\n                                    )}\r\n                                    {\r\n                                        errors.rucEmisor && errors.rucEmisor.type === \"minLength\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">El Ruc del Emisor debe ser de 11 digitos</small>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        errors.rucEmisor && errors.rucEmisor.type === \"maxLength\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">El Ruc del Emisor debe ser de 11 digitos</small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Tipo de Documento del Receptor:</label>\r\n                                    <select name=\"tipoDocReceptor\" className=\"form-control\" \r\n                                        ref={register({validate:validateSelect})\r\n                                    }>\r\n                                        <option value=\"0\">Seleccionar Tipo de Documento</option> \r\n                                        {\r\n                                            tipoDOC.map((elm,i) => (\r\n                                                <option key={i} value={elm.tipodocId}>{elm.tipodocCod}-{elm.tipodocDesc}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    {\r\n                                        errors.tipoDocReceptor && errors.tipoDocReceptor.type ===\"validate\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">Debe seleccionar un Tipo de Documento del Receptor</small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"rucReceptor\">RUC del Receptor:</label>\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"rucReceptor\"\r\n                                    name=\"rucReceptor\"\r\n                                    ref={register({required:true, minLength:8, maxLength:11})}\r\n                                    />\r\n                                    {errors.rucReceptor && errors.rucReceptor.type === 'required' && (\r\n                                    <small className=\"text-danger font-weight-bold\">Debe ingresar el Ruc del Receptor</small>\r\n                                    )}\r\n                                    {\r\n                                        errors.rucReceptor && errors.rucReceptor.type === \"minLength\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">El Ruc del Emisor debe tener m√≠nimo 8 digitos</small>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        errors.rucReceptor && errors.rucReceptor.type === \"maxLength\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">El Ruc del Emisor debe tener m√°ximo 11 digitos</small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label>Tipo de Comprobante:</label>\r\n                                    <select name=\"tipoCpe\" className=\"form-control\" \r\n                                        ref={register({validate:validateSelect})\r\n                                    }>\r\n                                        <option value=\"0\">Seleccionar Tipo de Comprobante</option> \r\n                                        {\r\n                                            tipoCPE.map((elm,i) => (\r\n                                                <option key={i} value={elm.tipocpeId}>{elm.tipocpeCod}-{elm.tipocpeDesc}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    {\r\n                                        errors.tipoCpe && errors.tipoCpe.type ===\"validate\" && (\r\n                                            <small className=\"text-danger font-weight-bold\">Debe seleccionar un Tipo de Comprobante</small>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n \r\n                                <div className=\"form-group\">\r\n                                    <label>Serie - N√∫mero:</label>\r\n                                    <div className=\"input-group\">\r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mr-2\"\r\n                                        id=\"serieCpe\"\r\n                                        name=\"serieCpe\" \r\n                                        ref={register({required:true, minLength:4, maxLength:4})}\r\n                                        />\r\n \r\n                                        <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control mr-2\"\r\n                                        id=\"numeroCpe\"\r\n                                        name=\"numeroCpe\" \r\n                                        ref={register({required:true, minLength:1, maxLength:8})}\r\n                                        /> \r\n\r\n                                    </div>\r\n                                    <div>\r\n                                        {errors.serieCpe && errors.serieCpe.type === 'required' && (\r\n                                        <small className=\"text-danger font-weight-bold\">Debe ingresar la Serie del Comprobante</small>\r\n                                        )}\r\n                                        {\r\n                                            errors.serieCpe && errors.serieCpe.type === \"minLength\" && (\r\n                                                <small className=\"text-danger font-weight-bold\">La serie del comprobante debe ser de 4 digitos</small>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            errors.serieCpe && errors.serieCpe.type === \"maxLength\" && (\r\n                                                <small className=\"text-danger font-weight-bold\">La serie del comprobante debe ser de 4 digitos</small>\r\n                                            )\r\n                                        }\r\n\r\n                                        {errors.numeroCpe && errors.numeroCpe.type === 'required' && (\r\n                                        <small className=\"text-danger font-weight-bold\">Debe ingresar el N√∫mero del Comprobante</small>\r\n                                        )}\r\n                                        {\r\n                                            errors.numeroCpe && errors.numeroCpe.type === \"minLength\" && (\r\n                                                <small className=\"text-danger font-weight-bold\">La N√∫mero del comprobante debe tener m√≠nimo 1 digito</small>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            errors.numeroCpe && errors.numeroCpe.type === \"maxLength\" && (\r\n                                                <small className=\"text-danger font-weight-bold\">La N√∫mero del comprobante debe tener m√°ximo 8 digitos</small>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n \r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"fechaCpe\">Fecha del Comprobante:</label>\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"fechaCpe\"\r\n                                    name=\"fechaCpe\" \r\n                                    ref={register({required:true})}\r\n                                    />\r\n                                    {errors.fechaCpe && errors.fechaCpe.type === 'required' && (\r\n                                    <small className=\"text-danger font-weight-bold\">Debe ingresar la Fecha del Comprobante</small>\r\n                                    )}\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"importeCpe\">Importe Total del Comprobante:</label>\r\n                                    <div className=\"input-group\">\r\n                                        <span className=\"input-group-text\">S/</span>\r\n                                        <input\r\n                                        type=\"number\"\r\n                                        className=\"form-control\"\r\n                                        id=\"importeCpe\"\r\n                                        name=\"importeCpe\" \r\n                                        step=\"any\"\r\n                                        ref={register({required:true,min:1})}\r\n                                        /> \r\n                                    </div>\r\n                                    <div>\r\n                                        {errors.importeCpe && errors.importeCpe.type === 'required' && (\r\n                                        <small className=\"text-danger font-weight-bold\">Debe ingresar el Importe Total del Comprobante</small>\r\n                                        )}\r\n                                        {errors.importeCpe && errors.importeCpe.type === 'min' && (\r\n                                        <small className=\"text-danger font-weight-bold\">El Importe Total del Comprobante no puede ser menor a 1</small>\r\n                                        )} \r\n                                    </div>\r\n                                </div>\r\n \r\n                            </div>\r\n                        </div> \r\n                </div>\r\n \r\n                <button type=\"submit\" className=\"btn btn-info btn-block\">Consultar</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","E:\\Aplicativos\\visorpressto\\visorpressto\\src\\services\\service.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\BackConfig.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\Routes.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\view\\HomeView.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\view\\ResultView.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\context\\cpeContext.js",[],"E:\\Aplicativos\\visorpressto\\visorpressto\\src\\components\\ProtectedRoute.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":12,"column":11,"nodeType":"57","messageId":"58","endLine":12,"endColumn":18},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]